[{"title":"css世界-记录","url":"/741b471ab1bd/css%E4%B8%96%E7%95%8C-%E8%AE%B0%E5%BD%95/","content":"任意高度元素的展开收起动画使用 max-height 配合 transition 实现 ，当 max-height 比设定的 height 大的时候，元素的高度取 height 的值。\n.el &#123;  max-height: 0;  overflow: hidden;  transition: max-height 0.25s;&#125;.el.active &#123;  max-height: 1000px;&#125;\n\n需要注意，虽然 max-height 需要大于 height，但是需要 max-height 的值不能过大，这样会导致过渡动画可能不明显，比如，当前的元素高度是 100 像素，而 max-height 是 1000 像素，动画时间是 250ms，假设动画函数是线性的，则前 225ms 是看不到收起效果的，因为 max-height 从 1000 像素 到 100 像素 变化这段时间，元素不会有区域被隐藏，会给人动画延迟 225ms 的感觉。 所以需要给 max-height 设定一个足够安全（使动画按照预期发生）的值。\n幽灵空白节点在 HTML5 中，内联元素渲染后在页面的表现如同该元素盒子前有一个“空白节点”一样，这个“空白节点”是透明的、不占据宽度且无法通过代码获取，其表现如同文本节点。（非 HTML5 的内联元素不存在该现象）\n规范中实际上对这个“幽灵空白节点”是有提及的，“幽灵空白节点” 实际上也是一个盒子，不过是个假想盒，名叫“strut”，中文直译为“支柱”，是一个存在于每个“行框盒子”前面，同时具有该元素的字体和行高属性的0宽度的内联盒\n层叠上下文准则\n谁大谁上：当具有明显的层叠水平标识的时候，如生效的z-index 属性值，在同一个层叠上下文领域，层叠水平值大的那一个覆盖小的那一个\n后来居上：当元素的层叠水平一致、层叠顺序相同的时候，在DOM流中处于后面的元素会覆盖前面的元素\n\n","categories":["前端","CSS"],"tags":["前端","CSS"]},{"title":"css计数器","url":"/1b3605bb078e/css%E8%AE%A1%E6%95%B0%E5%99%A8/","content":"CSS 可以通过其计数器功能实现不使用 js 在列表前添加序号等操作。\n1. 初始化计数器counter-reset: name number;\n\n\nname: 设定的计数器名称\nnumber：计数器初始值，默认为 0\n\n2. 操作值counter-increment: name number;\n\n\nname: 计数器名称\nnumber: 增加的值，默认为 1，可以设置为 0 和负数\n\n3.获取并显示值content: counter(name, style);\n\n\nname: 计数器名称\nstyle: 计数器样式，见 counter-style_计数器样式\n\n也可使用 counters\ncounters(name, string, style)\n\n\nname: 计数器名称\nstring: 用来定义多个计数器同时使用的连接符\nstyle: 计数器样式，\n\n例 1（使用 counter）&lt;!DOCTYPE html&gt;&lt;html&gt;  &lt;head&gt;    &lt;meta charset=&quot;utf-8&quot; /&gt;    &lt;style&gt;      body &#123;        counter-reset: section;      &#125;      h2::before &#123;        counter-increment: section;        content: &quot;Section &quot; counter(section) &quot;: &quot;;      &#125;    &lt;/style&gt;  &lt;/head&gt;  &lt;body&gt;    &lt;h2&gt;标题1&lt;/h2&gt;    &lt;h2&gt;标题2&lt;/h2&gt;    &lt;h2&gt;标题3&lt;/h2&gt;  &lt;/body&gt;&lt;/html&gt;\n\n\n\n效果如下\n\n\n\n  \n    \n    \n      body {\n        counter-reset: section;   \n      }\n      h2::before {\n        counter-increment: section;\n        content: \"Section \" counter(section) \": \";\n      }\n    \n  \n  \n    标题1\n    标题2\n    标题3\n  \n\n\n\n例 2（使用 counters）&lt;!DOCTYPE html&gt;&lt;html&gt;  &lt;head&gt;    &lt;meta charset=&quot;utf-8&quot; /&gt;    &lt;style&gt;      ol &#123;        counter-reset: section;        list-style-type: none;      &#125;      li::before &#123;        counter-increment: section;        content: counters(section, &quot;.&quot;) &quot; &quot;;      &#125;    &lt;/style&gt;  &lt;/head&gt;  &lt;body&gt;    &lt;ol&gt;      &lt;li&gt;item&lt;/li&gt;      &lt;li&gt;        item        &lt;ol&gt;          &lt;li&gt;item&lt;/li&gt;          &lt;li&gt;item&lt;/li&gt;          &lt;li&gt;            item            &lt;ol&gt;              &lt;li&gt;item&lt;/li&gt;              &lt;li&gt;item&lt;/li&gt;              &lt;li&gt;item&lt;/li&gt;            &lt;/ol&gt;          &lt;/li&gt;          &lt;li&gt;item&lt;/li&gt;        &lt;/ol&gt;      &lt;/li&gt;      &lt;li&gt;item&lt;/li&gt;      &lt;li&gt;item&lt;/li&gt;    &lt;/ol&gt;    &lt;ol&gt;      &lt;li&gt;item&lt;/li&gt;      &lt;li&gt;item&lt;/li&gt;    &lt;/ol&gt;  &lt;/body&gt;&lt;/html&gt;\n\n\n效果如下\n\n\n\n  \n    \n    \n      ol {\n        counter-reset: s2;\n        list-style-type: none;\n      }\n      li::before {\n        counter-increment: s2;\n        content: counters(s2, \".\") \" \";\n      }\n    \n  \n  \n    \n      item\n      \n        item\n        \n          item\n          item\n          \n            item\n            \n              item\n              item\n              item\n            \n          \n          item\n        \n      \n      item\n      item\n    \n    \n      item\n      item\n    \n  \n\n\n\n","categories":["前端","CSS"],"tags":["前端","CSS"]},{"title":"hexo配置aPlayer播放器","url":"/f95cfd58c53a/hexo%E9%85%8D%E7%BD%AEaplayer%E6%92%AD%E6%94%BE%E5%99%A8/","content":"首先安装 hexo-tag-aplayer 插件 npm install hexo-tag-aplayer --save\n然后在主题配置文件 _config.**.yml 文件中添加配置\naplayer:  asset_inject: true  # 自动插入 Aplayer.js 与 Meting.js 资源脚本, 默认开启  meting: true # 启用 metingjs\n之后根据官方文档进行配置即可 hexo-tag-aplayer\n这里主要介绍配置aPlayer全局播放的配置方式\n首先设置 asset_inject 为 false，之后在主题的配置文件中使用 inject 注入aPlayer的dom结构，由于需要全局播放所以需要开启 pjax 功能。注意 pjax 和 aplayer 配置项在同一个配置文件中最好。\naplayer:  asset_inject: false  meting: truepjax:  enable: trueinject:  bottom:    # 注入音乐播放器    - &lt;div class=&quot;aplayer no-destroy&quot; data-id=&quot;&quot; data-server=&quot;&quot; data-type=&quot;&quot; data-fixed=&quot;&quot; data-autoplay=&quot;&quot;&gt; &lt;/div&gt;\naplayer使用的参数如下：\n\n\n\n选项\n默认值\n描述\n\n\n\ndata-id\n必填\n音乐id、播放列表id、相册id、搜索关键字\n\n\nserver\n必填\n音乐数据源：netease（网易云）、tencent（QQ音乐）、kugou、xiaomi、baidu\n\n\ntype\n必填\nsong（音乐）、playlist（播放列表，歌单）、album、search（关键词搜索）\n\n\nfixed\nfalse\n是否开启固定模式\n\n\nmini\nfalse\n是否开启迷你模式\n\n\nloop\nall\n列表循环模式：all,one,none\n\n\norder\nlist\n列表播放模式：list,random\n\n\nautoplay\ntrue\n是否自动播放,根据浏览器规则可能不可用\n\n\nvolume\n0.7\n初始音量，范围为0到1\n\n\npreload\nauto\n预加载模式：none,metadata,auto\n\n\ntheme\n#ad7a86\n主题颜色，支持16进制颜色代码\n\n\nlistmaxheight\n340px\n播放列表最大高度，单位为px\n\n\nmutex\ntrue\n互斥模式，开启后同一时间只能播放一个播放器实例\n\n\nlistfolded\nfalse\n列表折叠状态，默认不折叠\n\n\naPlayer 官方文档：APlayer\n","categories":["hexo"],"tags":["hexo","aPlayer"]},{"title":"微信小程序构建npm","url":"/cbcd0deeb7dd/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%9E%84%E5%BB%BAnpm/","content":"在微信小程序中初始化 npm从小程序基础库版本 2.2.1 或以上、及开发者工具 1.02.1808300 或以上开始，小程序支持使用 npm 安装第三方包。\n初始化 npm\n在小程序项目根目录下执行 npm init 命令，生成 package.json 文件。\n\n在 package.json 中添加依赖包：\nnpm install --save &lt;package-name&gt;@&lt;version&gt;\n\n\n如果仅需要初始化而暂时不安装依赖，可以在 package.json 目录下创建一个空的 node_modules 目录。\n\n\n安装依赖后设置project.config.json：\n&#123;  &quot;setting&quot;: &#123;    &quot;packNpmManually&quot;: true,    &quot;packNpmRelationList&quot;: [      &#123;        &quot;packageJsonPath&quot;: &quot;./package.json&quot;,        &quot;miniprogramNpmDistDir&quot;: &quot;./&quot;      &#125;    ]  &#125;&#125;\n\n打开”工具”-&gt;”构建 npm”，点击“确定”开始构建。\n\n\n","categories":["前端","微信小程序"],"tags":["npm"]}]